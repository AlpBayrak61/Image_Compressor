{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alpba\\\\OneDrive\\\\Documents\\\\GitHub\\\\reactimagecompressor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport imageCompression from 'browser-image-compression';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [originalImage, setOriginalImage] = useState(null);\n  const [compressedImage, setCompressedImage] = useState(null);\n  const [compressionProgress, setCompressionProgress] = useState(0);\n  const handleImageUpload = e => {\n    setOriginalImage(e.target.files[0]);\n    setCompressedImage(null);\n  };\n  const handleImageCompression = async () => {\n    if (!originalImage) {\n      alert('Please upload an image first.');\n      return;\n    }\n    const options = {\n      maxSizeMB: 1,\n      // Maximum size in MB\n      maxWidthOrHeight: 1024,\n      // Resize dimensions\n      onProgress: progress => setCompressionProgress(progress)\n    };\n    try {\n      const compressed = await imageCompression(originalImage, options);\n      setCompressedImage(compressed);\n    } catch (error) {\n      console.error('Error compressing image:', error);\n    }\n  };\n  const downloadCompressedImage = () => {\n    if (compressedImage) {\n      const url = URL.createObjectURL(compressedImage);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'compressed-image.jpg';\n      link.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Image Compressor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Reduce your image size without compromising quality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleImageCompression,\n          children: \"Compress Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), compressionProgress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"progress\",\n        children: [\"Compression Progress: \", compressionProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), compressedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compressed Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(compressedImage),\n          alt: \"Compressed\",\n          className: \"compressed-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: downloadCompressedImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IyPXjTH6o2smQOSye0Q7b9oUApA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","imageCompression","jsxDEV","_jsxDEV","App","_s","originalImage","setOriginalImage","compressedImage","setCompressedImage","compressionProgress","setCompressionProgress","handleImageUpload","e","target","files","handleImageCompression","alert","options","maxSizeMB","maxWidthOrHeight","onProgress","progress","compressed","error","console","downloadCompressedImage","url","URL","createObjectURL","link","document","createElement","href","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/alpba/OneDrive/Documents/GitHub/reactimagecompressor/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState } from 'react';\r\nimport imageCompression from 'browser-image-compression';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const [compressedImage, setCompressedImage] = useState(null);\r\n  const [compressionProgress, setCompressionProgress] = useState(0);\r\n\r\n  const handleImageUpload = (e) => {\r\n    setOriginalImage(e.target.files[0]);\r\n    setCompressedImage(null);\r\n  };\r\n\r\n  const handleImageCompression = async () => {\r\n    if (!originalImage) {\r\n      alert('Please upload an image first.');\r\n      return;\r\n    }\r\n\r\n    const options = {\r\n      maxSizeMB: 1, // Maximum size in MB\r\n      maxWidthOrHeight: 1024, // Resize dimensions\r\n      onProgress: (progress) => setCompressionProgress(progress),\r\n    };\r\n\r\n    try {\r\n      const compressed = await imageCompression(originalImage, options);\r\n      setCompressedImage(compressed);\r\n    } catch (error) {\r\n      console.error('Error compressing image:', error);\r\n    }\r\n  };\r\n\r\n  const downloadCompressedImage = () => {\r\n    if (compressedImage) {\r\n      const url = URL.createObjectURL(compressedImage);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'compressed-image.jpg';\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Image Compressor</h1>\r\n        <p className=\"subtitle\">Reduce your image size without compromising quality</p>\r\n        <div className=\"upload-section\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n            className=\"file-input\"\r\n          />\r\n          <button className=\"action-button\" onClick={handleImageCompression}>\r\n            Compress Image\r\n          </button>\r\n        </div>\r\n        {compressionProgress > 0 && (\r\n          <p className=\"progress\">Compression Progress: {compressionProgress}%</p>\r\n        )}\r\n        {compressedImage && (\r\n          <div className=\"result\">\r\n            <h3>Compressed Image:</h3>\r\n            <img\r\n              src={URL.createObjectURL(compressedImage)}\r\n              alt=\"Compressed\"\r\n              className=\"compressed-image\"\r\n            />\r\n            <button className=\"action-button\" onClick={downloadCompressedImage}>\r\n              Download\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjE,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC/BN,gBAAgB,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnCN,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMO,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAACV,aAAa,EAAE;MAClBW,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEA,MAAMC,OAAO,GAAG;MACdC,SAAS,EAAE,CAAC;MAAE;MACdC,gBAAgB,EAAE,IAAI;MAAE;MACxBC,UAAU,EAAGC,QAAQ,IAAKX,sBAAsB,CAACW,QAAQ;IAC3D,CAAC;IAED,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMtB,gBAAgB,CAACK,aAAa,EAAEY,OAAO,CAAC;MACjET,kBAAkB,CAACc,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAIlB,eAAe,EAAE;MACnB,MAAMmB,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACrB,eAAe,CAAC;MAChD,MAAMsB,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;MACfG,IAAI,CAACI,QAAQ,GAAG,sBAAsB;MACtCJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlC,OAAA;MAAKiC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlC,OAAA;QAAIiC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CtC,OAAA;QAAGiC,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAmD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/EtC,OAAA;QAAKiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BlC,OAAA;UACEuC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,SAAS;UAChBC,QAAQ,EAAEhC,iBAAkB;UAC5BwB,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFtC,OAAA;UAAQiC,SAAS,EAAC,eAAe;UAACS,OAAO,EAAE7B,sBAAuB;UAAAqB,QAAA,EAAC;QAEnE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACL/B,mBAAmB,GAAG,CAAC,iBACtBP,OAAA;QAAGiC,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAC,wBAAsB,EAAC3B,mBAAmB,EAAC,GAAC;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxE,EACAjC,eAAe,iBACdL,OAAA;QAAKiC,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBlC,OAAA;UAAAkC,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BtC,OAAA;UACE2C,GAAG,EAAElB,GAAG,CAACC,eAAe,CAACrB,eAAe,CAAE;UAC1CuC,GAAG,EAAC,YAAY;UAChBX,SAAS,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFtC,OAAA;UAAQiC,SAAS,EAAC,eAAe;UAACS,OAAO,EAAEnB,uBAAwB;UAAAW,QAAA,EAAC;QAEpE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpC,EAAA,CA3EQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AA6EZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}